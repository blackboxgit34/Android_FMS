// Generated by view binder compiler. Do not edit!
package com.humbhi.blackbox.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.humbhi.blackbox.R;
import com.vaibhavlakhera.circularprogressview.CircularProgressView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ExcellentDriverAdapterBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CircularProgressView pvHarshAcc;

  @NonNull
  public final CircularProgressView pvHarshBreak;

  @NonNull
  public final CircularProgressView pvHarshOS;

  @NonNull
  public final CircularProgressView pvHarshRashTurn;

  @NonNull
  public final TextView tvDriverName;

  @NonNull
  public final TextView tvVehicleName;

  private ExcellentDriverAdapterBinding(@NonNull LinearLayout rootView,
      @NonNull CircularProgressView pvHarshAcc, @NonNull CircularProgressView pvHarshBreak,
      @NonNull CircularProgressView pvHarshOS, @NonNull CircularProgressView pvHarshRashTurn,
      @NonNull TextView tvDriverName, @NonNull TextView tvVehicleName) {
    this.rootView = rootView;
    this.pvHarshAcc = pvHarshAcc;
    this.pvHarshBreak = pvHarshBreak;
    this.pvHarshOS = pvHarshOS;
    this.pvHarshRashTurn = pvHarshRashTurn;
    this.tvDriverName = tvDriverName;
    this.tvVehicleName = tvVehicleName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ExcellentDriverAdapterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ExcellentDriverAdapterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.excellent_driver_adapter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ExcellentDriverAdapterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.pvHarshAcc;
      CircularProgressView pvHarshAcc = ViewBindings.findChildViewById(rootView, id);
      if (pvHarshAcc == null) {
        break missingId;
      }

      id = R.id.pvHarshBreak;
      CircularProgressView pvHarshBreak = ViewBindings.findChildViewById(rootView, id);
      if (pvHarshBreak == null) {
        break missingId;
      }

      id = R.id.pvHarshOS;
      CircularProgressView pvHarshOS = ViewBindings.findChildViewById(rootView, id);
      if (pvHarshOS == null) {
        break missingId;
      }

      id = R.id.pvHarshRashTurn;
      CircularProgressView pvHarshRashTurn = ViewBindings.findChildViewById(rootView, id);
      if (pvHarshRashTurn == null) {
        break missingId;
      }

      id = R.id.tvDriverName;
      TextView tvDriverName = ViewBindings.findChildViewById(rootView, id);
      if (tvDriverName == null) {
        break missingId;
      }

      id = R.id.tvVehicleName;
      TextView tvVehicleName = ViewBindings.findChildViewById(rootView, id);
      if (tvVehicleName == null) {
        break missingId;
      }

      return new ExcellentDriverAdapterBinding((LinearLayout) rootView, pvHarshAcc, pvHarshBreak,
          pvHarshOS, pvHarshRashTurn, tvDriverName, tvVehicleName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
