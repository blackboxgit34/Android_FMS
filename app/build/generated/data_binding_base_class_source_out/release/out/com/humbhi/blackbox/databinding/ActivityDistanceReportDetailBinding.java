// Generated by view binder compiler. Do not edit!
package com.humbhi.blackbox.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.humbhi.blackbox.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDistanceReportDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cvDetails;

  @NonNull
  public final FrameLayout fLayout;

  @NonNull
  public final FragmentContainerView map;

  @NonNull
  public final ToolbarLayoutBinding toolbar;

  @NonNull
  public final AppCompatTextView tvDistance;

  @NonNull
  public final AppCompatTextView tvEndLocation;

  @NonNull
  public final AppCompatTextView tvStartocation;

  private ActivityDistanceReportDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView cvDetails, @NonNull FrameLayout fLayout, @NonNull FragmentContainerView map,
      @NonNull ToolbarLayoutBinding toolbar, @NonNull AppCompatTextView tvDistance,
      @NonNull AppCompatTextView tvEndLocation, @NonNull AppCompatTextView tvStartocation) {
    this.rootView = rootView;
    this.cvDetails = cvDetails;
    this.fLayout = fLayout;
    this.map = map;
    this.toolbar = toolbar;
    this.tvDistance = tvDistance;
    this.tvEndLocation = tvEndLocation;
    this.tvStartocation = tvStartocation;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDistanceReportDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDistanceReportDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_distance_report_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDistanceReportDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cvDetails;
      CardView cvDetails = ViewBindings.findChildViewById(rootView, id);
      if (cvDetails == null) {
        break missingId;
      }

      id = R.id.fLayout;
      FrameLayout fLayout = ViewBindings.findChildViewById(rootView, id);
      if (fLayout == null) {
        break missingId;
      }

      id = R.id.map;
      FragmentContainerView map = ViewBindings.findChildViewById(rootView, id);
      if (map == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarLayoutBinding binding_toolbar = ToolbarLayoutBinding.bind(toolbar);

      id = R.id.tvDistance;
      AppCompatTextView tvDistance = ViewBindings.findChildViewById(rootView, id);
      if (tvDistance == null) {
        break missingId;
      }

      id = R.id.tvEndLocation;
      AppCompatTextView tvEndLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvEndLocation == null) {
        break missingId;
      }

      id = R.id.tvStartocation;
      AppCompatTextView tvStartocation = ViewBindings.findChildViewById(rootView, id);
      if (tvStartocation == null) {
        break missingId;
      }

      return new ActivityDistanceReportDetailBinding((ConstraintLayout) rootView, cvDetails,
          fLayout, map, binding_toolbar, tvDistance, tvEndLocation, tvStartocation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
