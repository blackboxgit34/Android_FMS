// Generated by view binder compiler. Do not edit!
package com.humbhi.blackbox.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.humbhi.blackbox.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FmsVehicleListDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivAction;

  @NonNull
  public final TextView tvDueDate;

  @NonNull
  public final TextView tvRemarks;

  @NonNull
  public final TextView tvRenewalType;

  @NonNull
  public final TextView tvStatus;

  private FmsVehicleListDetailsBinding(@NonNull LinearLayout rootView, @NonNull ImageView ivAction,
      @NonNull TextView tvDueDate, @NonNull TextView tvRemarks, @NonNull TextView tvRenewalType,
      @NonNull TextView tvStatus) {
    this.rootView = rootView;
    this.ivAction = ivAction;
    this.tvDueDate = tvDueDate;
    this.tvRemarks = tvRemarks;
    this.tvRenewalType = tvRenewalType;
    this.tvStatus = tvStatus;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FmsVehicleListDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FmsVehicleListDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fms_vehicle_list_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FmsVehicleListDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivAction;
      ImageView ivAction = ViewBindings.findChildViewById(rootView, id);
      if (ivAction == null) {
        break missingId;
      }

      id = R.id.tvDueDate;
      TextView tvDueDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDueDate == null) {
        break missingId;
      }

      id = R.id.tvRemarks;
      TextView tvRemarks = ViewBindings.findChildViewById(rootView, id);
      if (tvRemarks == null) {
        break missingId;
      }

      id = R.id.tvRenewalType;
      TextView tvRenewalType = ViewBindings.findChildViewById(rootView, id);
      if (tvRenewalType == null) {
        break missingId;
      }

      id = R.id.tvStatus;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      return new FmsVehicleListDetailsBinding((LinearLayout) rootView, ivAction, tvDueDate,
          tvRemarks, tvRenewalType, tvStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
