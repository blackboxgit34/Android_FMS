// Generated by view binder compiler. Do not edit!
package com.humbhi.blackbox.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.humbhi.blackbox.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutAlertOkCancelBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView tvErrorCancel;

  @NonNull
  public final AppCompatTextView tvErrorMessage;

  @NonNull
  public final TextView tvErrorOK;

  @NonNull
  public final AppCompatTextView tvErrorTitle;

  private LayoutAlertOkCancelBinding(@NonNull CardView rootView, @NonNull TextView tvErrorCancel,
      @NonNull AppCompatTextView tvErrorMessage, @NonNull TextView tvErrorOK,
      @NonNull AppCompatTextView tvErrorTitle) {
    this.rootView = rootView;
    this.tvErrorCancel = tvErrorCancel;
    this.tvErrorMessage = tvErrorMessage;
    this.tvErrorOK = tvErrorOK;
    this.tvErrorTitle = tvErrorTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutAlertOkCancelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutAlertOkCancelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_alert_ok_cancel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutAlertOkCancelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvErrorCancel;
      TextView tvErrorCancel = ViewBindings.findChildViewById(rootView, id);
      if (tvErrorCancel == null) {
        break missingId;
      }

      id = R.id.tvErrorMessage;
      AppCompatTextView tvErrorMessage = ViewBindings.findChildViewById(rootView, id);
      if (tvErrorMessage == null) {
        break missingId;
      }

      id = R.id.tvErrorOK;
      TextView tvErrorOK = ViewBindings.findChildViewById(rootView, id);
      if (tvErrorOK == null) {
        break missingId;
      }

      id = R.id.tvErrorTitle;
      AppCompatTextView tvErrorTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvErrorTitle == null) {
        break missingId;
      }

      return new LayoutAlertOkCancelBinding((CardView) rootView, tvErrorCancel, tvErrorMessage,
          tvErrorOK, tvErrorTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
