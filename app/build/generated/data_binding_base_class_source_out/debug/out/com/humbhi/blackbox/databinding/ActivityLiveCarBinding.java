// Generated by view binder compiler. Do not edit!
package com.humbhi.blackbox.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.fragment.app.FragmentContainerView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.humbhi.blackbox.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLiveCarBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FrameLayout fBottomSheet;

  @NonNull
  public final FrameLayout fLayout;

  @NonNull
  public final ImageView l1;

  @NonNull
  public final ImageView l2;

  @NonNull
  public final ImageView l3;

  @NonNull
  public final ImageView l4;

  @NonNull
  public final ImageView l5;

  @NonNull
  public final ImageView l6;

  @NonNull
  public final LinearLayout lowerLayout;

  @NonNull
  public final FragmentContainerView map;

  @NonNull
  public final ImageView mapView;

  @NonNull
  public final NestedScrollView nsScroll;

  @NonNull
  public final LinearLayout progress;

  @NonNull
  public final RecyclerView rvAlerts;

  @NonNull
  public final ToolbarLayoutBinding toolbar;

  @NonNull
  public final TextView tvAcStatus;

  @NonNull
  public final TextView tvAlerts;

  @NonNull
  public final ImageView tvBatteryStatus;

  @NonNull
  public final AppCompatTextView tvDataDate;

  @NonNull
  public final AppCompatTextView tvDistance;

  @NonNull
  public final AppCompatTextView tvFuelStatus;

  @NonNull
  public final TextView tvHighspeed;

  @NonNull
  public final TextView tvIgnition;

  @NonNull
  public final AppCompatTextView tvIgnitionStatus;

  @NonNull
  public final AppCompatTextView tvLocation;

  @NonNull
  public final TextView tvMoving;

  @NonNull
  public final AppCompatTextView tvMovingFromLastStop;

  @NonNull
  public final AppCompatTextView tvParkAtLastStop;

  @NonNull
  public final TextView tvParked;

  @NonNull
  public final AppCompatTextView tvParkingTimeTotal;

  @NonNull
  public final TextView tvPlayback;

  @NonNull
  public final AppCompatTextView tvProgressStatus;

  @NonNull
  public final AppCompatTextView tvSpeed;

  @NonNull
  public final AppCompatTextView tvStoppageTime;

  @NonNull
  public final TextView tvToed;

  @NonNull
  public final AppCompatTextView tvTotalMovingTime;

  @NonNull
  public final TextView tvUnreach;

  private ActivityLiveCarBinding(@NonNull ConstraintLayout rootView,
      @NonNull FrameLayout fBottomSheet, @NonNull FrameLayout fLayout, @NonNull ImageView l1,
      @NonNull ImageView l2, @NonNull ImageView l3, @NonNull ImageView l4, @NonNull ImageView l5,
      @NonNull ImageView l6, @NonNull LinearLayout lowerLayout, @NonNull FragmentContainerView map,
      @NonNull ImageView mapView, @NonNull NestedScrollView nsScroll,
      @NonNull LinearLayout progress, @NonNull RecyclerView rvAlerts,
      @NonNull ToolbarLayoutBinding toolbar, @NonNull TextView tvAcStatus,
      @NonNull TextView tvAlerts, @NonNull ImageView tvBatteryStatus,
      @NonNull AppCompatTextView tvDataDate, @NonNull AppCompatTextView tvDistance,
      @NonNull AppCompatTextView tvFuelStatus, @NonNull TextView tvHighspeed,
      @NonNull TextView tvIgnition, @NonNull AppCompatTextView tvIgnitionStatus,
      @NonNull AppCompatTextView tvLocation, @NonNull TextView tvMoving,
      @NonNull AppCompatTextView tvMovingFromLastStop, @NonNull AppCompatTextView tvParkAtLastStop,
      @NonNull TextView tvParked, @NonNull AppCompatTextView tvParkingTimeTotal,
      @NonNull TextView tvPlayback, @NonNull AppCompatTextView tvProgressStatus,
      @NonNull AppCompatTextView tvSpeed, @NonNull AppCompatTextView tvStoppageTime,
      @NonNull TextView tvToed, @NonNull AppCompatTextView tvTotalMovingTime,
      @NonNull TextView tvUnreach) {
    this.rootView = rootView;
    this.fBottomSheet = fBottomSheet;
    this.fLayout = fLayout;
    this.l1 = l1;
    this.l2 = l2;
    this.l3 = l3;
    this.l4 = l4;
    this.l5 = l5;
    this.l6 = l6;
    this.lowerLayout = lowerLayout;
    this.map = map;
    this.mapView = mapView;
    this.nsScroll = nsScroll;
    this.progress = progress;
    this.rvAlerts = rvAlerts;
    this.toolbar = toolbar;
    this.tvAcStatus = tvAcStatus;
    this.tvAlerts = tvAlerts;
    this.tvBatteryStatus = tvBatteryStatus;
    this.tvDataDate = tvDataDate;
    this.tvDistance = tvDistance;
    this.tvFuelStatus = tvFuelStatus;
    this.tvHighspeed = tvHighspeed;
    this.tvIgnition = tvIgnition;
    this.tvIgnitionStatus = tvIgnitionStatus;
    this.tvLocation = tvLocation;
    this.tvMoving = tvMoving;
    this.tvMovingFromLastStop = tvMovingFromLastStop;
    this.tvParkAtLastStop = tvParkAtLastStop;
    this.tvParked = tvParked;
    this.tvParkingTimeTotal = tvParkingTimeTotal;
    this.tvPlayback = tvPlayback;
    this.tvProgressStatus = tvProgressStatus;
    this.tvSpeed = tvSpeed;
    this.tvStoppageTime = tvStoppageTime;
    this.tvToed = tvToed;
    this.tvTotalMovingTime = tvTotalMovingTime;
    this.tvUnreach = tvUnreach;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLiveCarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLiveCarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_live_car, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLiveCarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fBottomSheet;
      FrameLayout fBottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (fBottomSheet == null) {
        break missingId;
      }

      id = R.id.fLayout;
      FrameLayout fLayout = ViewBindings.findChildViewById(rootView, id);
      if (fLayout == null) {
        break missingId;
      }

      id = R.id.l1;
      ImageView l1 = ViewBindings.findChildViewById(rootView, id);
      if (l1 == null) {
        break missingId;
      }

      id = R.id.l2;
      ImageView l2 = ViewBindings.findChildViewById(rootView, id);
      if (l2 == null) {
        break missingId;
      }

      id = R.id.l3;
      ImageView l3 = ViewBindings.findChildViewById(rootView, id);
      if (l3 == null) {
        break missingId;
      }

      id = R.id.l4;
      ImageView l4 = ViewBindings.findChildViewById(rootView, id);
      if (l4 == null) {
        break missingId;
      }

      id = R.id.l5;
      ImageView l5 = ViewBindings.findChildViewById(rootView, id);
      if (l5 == null) {
        break missingId;
      }

      id = R.id.l6;
      ImageView l6 = ViewBindings.findChildViewById(rootView, id);
      if (l6 == null) {
        break missingId;
      }

      id = R.id.lowerLayout;
      LinearLayout lowerLayout = ViewBindings.findChildViewById(rootView, id);
      if (lowerLayout == null) {
        break missingId;
      }

      id = R.id.map;
      FragmentContainerView map = ViewBindings.findChildViewById(rootView, id);
      if (map == null) {
        break missingId;
      }

      id = R.id.mapView;
      ImageView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.nsScroll;
      NestedScrollView nsScroll = ViewBindings.findChildViewById(rootView, id);
      if (nsScroll == null) {
        break missingId;
      }

      id = R.id.progress;
      LinearLayout progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.rvAlerts;
      RecyclerView rvAlerts = ViewBindings.findChildViewById(rootView, id);
      if (rvAlerts == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarLayoutBinding binding_toolbar = ToolbarLayoutBinding.bind(toolbar);

      id = R.id.tvAcStatus;
      TextView tvAcStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvAcStatus == null) {
        break missingId;
      }

      id = R.id.tvAlerts;
      TextView tvAlerts = ViewBindings.findChildViewById(rootView, id);
      if (tvAlerts == null) {
        break missingId;
      }

      id = R.id.tvBatteryStatus;
      ImageView tvBatteryStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvBatteryStatus == null) {
        break missingId;
      }

      id = R.id.tvDataDate;
      AppCompatTextView tvDataDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDataDate == null) {
        break missingId;
      }

      id = R.id.tvDistance;
      AppCompatTextView tvDistance = ViewBindings.findChildViewById(rootView, id);
      if (tvDistance == null) {
        break missingId;
      }

      id = R.id.tvFuelStatus;
      AppCompatTextView tvFuelStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvFuelStatus == null) {
        break missingId;
      }

      id = R.id.tvHighspeed;
      TextView tvHighspeed = ViewBindings.findChildViewById(rootView, id);
      if (tvHighspeed == null) {
        break missingId;
      }

      id = R.id.tvIgnition;
      TextView tvIgnition = ViewBindings.findChildViewById(rootView, id);
      if (tvIgnition == null) {
        break missingId;
      }

      id = R.id.tvIgnitionStatus;
      AppCompatTextView tvIgnitionStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvIgnitionStatus == null) {
        break missingId;
      }

      id = R.id.tvLocation;
      AppCompatTextView tvLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvLocation == null) {
        break missingId;
      }

      id = R.id.tvMoving;
      TextView tvMoving = ViewBindings.findChildViewById(rootView, id);
      if (tvMoving == null) {
        break missingId;
      }

      id = R.id.tvMovingFromLastStop;
      AppCompatTextView tvMovingFromLastStop = ViewBindings.findChildViewById(rootView, id);
      if (tvMovingFromLastStop == null) {
        break missingId;
      }

      id = R.id.tvParkAtLastStop;
      AppCompatTextView tvParkAtLastStop = ViewBindings.findChildViewById(rootView, id);
      if (tvParkAtLastStop == null) {
        break missingId;
      }

      id = R.id.tvParked;
      TextView tvParked = ViewBindings.findChildViewById(rootView, id);
      if (tvParked == null) {
        break missingId;
      }

      id = R.id.tvParkingTimeTotal;
      AppCompatTextView tvParkingTimeTotal = ViewBindings.findChildViewById(rootView, id);
      if (tvParkingTimeTotal == null) {
        break missingId;
      }

      id = R.id.tvPlayback;
      TextView tvPlayback = ViewBindings.findChildViewById(rootView, id);
      if (tvPlayback == null) {
        break missingId;
      }

      id = R.id.tvProgressStatus;
      AppCompatTextView tvProgressStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvProgressStatus == null) {
        break missingId;
      }

      id = R.id.tvSpeed;
      AppCompatTextView tvSpeed = ViewBindings.findChildViewById(rootView, id);
      if (tvSpeed == null) {
        break missingId;
      }

      id = R.id.tvStoppageTime;
      AppCompatTextView tvStoppageTime = ViewBindings.findChildViewById(rootView, id);
      if (tvStoppageTime == null) {
        break missingId;
      }

      id = R.id.tvToed;
      TextView tvToed = ViewBindings.findChildViewById(rootView, id);
      if (tvToed == null) {
        break missingId;
      }

      id = R.id.tvTotalMovingTime;
      AppCompatTextView tvTotalMovingTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalMovingTime == null) {
        break missingId;
      }

      id = R.id.tvUnreach;
      TextView tvUnreach = ViewBindings.findChildViewById(rootView, id);
      if (tvUnreach == null) {
        break missingId;
      }

      return new ActivityLiveCarBinding((ConstraintLayout) rootView, fBottomSheet, fLayout, l1, l2,
          l3, l4, l5, l6, lowerLayout, map, mapView, nsScroll, progress, rvAlerts, binding_toolbar,
          tvAcStatus, tvAlerts, tvBatteryStatus, tvDataDate, tvDistance, tvFuelStatus, tvHighspeed,
          tvIgnition, tvIgnitionStatus, tvLocation, tvMoving, tvMovingFromLastStop,
          tvParkAtLastStop, tvParked, tvParkingTimeTotal, tvPlayback, tvProgressStatus, tvSpeed,
          tvStoppageTime, tvToed, tvTotalMovingTime, tvUnreach);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
