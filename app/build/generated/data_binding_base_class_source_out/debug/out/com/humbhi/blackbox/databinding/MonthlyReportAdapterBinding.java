// Generated by view binder compiler. Do not edit!
package com.humbhi.blackbox.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.anastr.speedviewlib.TubeSpeedometer;
import com.humbhi.blackbox.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MonthlyReportAdapterBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout rlGraph2;

  @NonNull
  public final TubeSpeedometer tubeSpeedometer;

  @NonNull
  public final TextView tvDistanceText;

  @NonNull
  public final TextView tvDriving;

  @NonNull
  public final TextView tvIgnition;

  @NonNull
  public final TextView tvStoppage;

  @NonNull
  public final TextView tvStoppagesCount;

  @NonNull
  public final TextView tvVehName;

  private MonthlyReportAdapterBinding(@NonNull LinearLayout rootView,
      @NonNull RelativeLayout rlGraph2, @NonNull TubeSpeedometer tubeSpeedometer,
      @NonNull TextView tvDistanceText, @NonNull TextView tvDriving, @NonNull TextView tvIgnition,
      @NonNull TextView tvStoppage, @NonNull TextView tvStoppagesCount,
      @NonNull TextView tvVehName) {
    this.rootView = rootView;
    this.rlGraph2 = rlGraph2;
    this.tubeSpeedometer = tubeSpeedometer;
    this.tvDistanceText = tvDistanceText;
    this.tvDriving = tvDriving;
    this.tvIgnition = tvIgnition;
    this.tvStoppage = tvStoppage;
    this.tvStoppagesCount = tvStoppagesCount;
    this.tvVehName = tvVehName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MonthlyReportAdapterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MonthlyReportAdapterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.monthly_report_adapter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MonthlyReportAdapterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.rlGraph2;
      RelativeLayout rlGraph2 = ViewBindings.findChildViewById(rootView, id);
      if (rlGraph2 == null) {
        break missingId;
      }

      id = R.id.tubeSpeedometer;
      TubeSpeedometer tubeSpeedometer = ViewBindings.findChildViewById(rootView, id);
      if (tubeSpeedometer == null) {
        break missingId;
      }

      id = R.id.tvDistanceText;
      TextView tvDistanceText = ViewBindings.findChildViewById(rootView, id);
      if (tvDistanceText == null) {
        break missingId;
      }

      id = R.id.tvDriving;
      TextView tvDriving = ViewBindings.findChildViewById(rootView, id);
      if (tvDriving == null) {
        break missingId;
      }

      id = R.id.tvIgnition;
      TextView tvIgnition = ViewBindings.findChildViewById(rootView, id);
      if (tvIgnition == null) {
        break missingId;
      }

      id = R.id.tvStoppage;
      TextView tvStoppage = ViewBindings.findChildViewById(rootView, id);
      if (tvStoppage == null) {
        break missingId;
      }

      id = R.id.tvStoppagesCount;
      TextView tvStoppagesCount = ViewBindings.findChildViewById(rootView, id);
      if (tvStoppagesCount == null) {
        break missingId;
      }

      id = R.id.tvVehName;
      TextView tvVehName = ViewBindings.findChildViewById(rootView, id);
      if (tvVehName == null) {
        break missingId;
      }

      return new MonthlyReportAdapterBinding((LinearLayout) rootView, rlGraph2, tubeSpeedometer,
          tvDistanceText, tvDriving, tvIgnition, tvStoppage, tvStoppagesCount, tvVehName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
