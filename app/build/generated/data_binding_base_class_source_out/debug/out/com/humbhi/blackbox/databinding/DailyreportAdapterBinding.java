// Generated by view binder compiler. Do not edit!
package com.humbhi.blackbox.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.humbhi.blackbox.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DailyreportAdapterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView tvDistance;

  @NonNull
  public final TextView tvEndLocation;

  @NonNull
  public final AppCompatTextView tvOverspeedings;

  @NonNull
  public final AppCompatTextView tvOverstoppages;

  @NonNull
  public final TextView tvSpeed;

  @NonNull
  public final TextView tvStartLocation;

  @NonNull
  public final TextView tvVehicleName;

  private DailyreportAdapterBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView tvDistance, @NonNull TextView tvEndLocation,
      @NonNull AppCompatTextView tvOverspeedings, @NonNull AppCompatTextView tvOverstoppages,
      @NonNull TextView tvSpeed, @NonNull TextView tvStartLocation,
      @NonNull TextView tvVehicleName) {
    this.rootView = rootView;
    this.tvDistance = tvDistance;
    this.tvEndLocation = tvEndLocation;
    this.tvOverspeedings = tvOverspeedings;
    this.tvOverstoppages = tvOverstoppages;
    this.tvSpeed = tvSpeed;
    this.tvStartLocation = tvStartLocation;
    this.tvVehicleName = tvVehicleName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DailyreportAdapterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DailyreportAdapterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dailyreport_adapter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DailyreportAdapterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvDistance;
      TextView tvDistance = ViewBindings.findChildViewById(rootView, id);
      if (tvDistance == null) {
        break missingId;
      }

      id = R.id.tvEndLocation;
      TextView tvEndLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvEndLocation == null) {
        break missingId;
      }

      id = R.id.tvOverspeedings;
      AppCompatTextView tvOverspeedings = ViewBindings.findChildViewById(rootView, id);
      if (tvOverspeedings == null) {
        break missingId;
      }

      id = R.id.tvOverstoppages;
      AppCompatTextView tvOverstoppages = ViewBindings.findChildViewById(rootView, id);
      if (tvOverstoppages == null) {
        break missingId;
      }

      id = R.id.tvSpeed;
      TextView tvSpeed = ViewBindings.findChildViewById(rootView, id);
      if (tvSpeed == null) {
        break missingId;
      }

      id = R.id.tvStartLocation;
      TextView tvStartLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvStartLocation == null) {
        break missingId;
      }

      id = R.id.tvVehicleName;
      TextView tvVehicleName = ViewBindings.findChildViewById(rootView, id);
      if (tvVehicleName == null) {
        break missingId;
      }

      return new DailyreportAdapterBinding((ConstraintLayout) rootView, tvDistance, tvEndLocation,
          tvOverspeedings, tvOverstoppages, tvSpeed, tvStartLocation, tvVehicleName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
