// Generated by view binder compiler. Do not edit!
package com.humbhi.blackbox.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.humbhi.blackbox.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFuelReportBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cvFuelFilling;

  @NonNull
  public final CardView cvFuelGraph;

  @NonNull
  public final CardView cvFuelRodDisconnections;

  @NonNull
  public final CardView cvFuelTheft;

  @NonNull
  public final LinearLayout llOne;

  @NonNull
  public final ToolbarLayoutBinding toolbar;

  private ActivityFuelReportBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView cvFuelFilling, @NonNull CardView cvFuelGraph,
      @NonNull CardView cvFuelRodDisconnections, @NonNull CardView cvFuelTheft,
      @NonNull LinearLayout llOne, @NonNull ToolbarLayoutBinding toolbar) {
    this.rootView = rootView;
    this.cvFuelFilling = cvFuelFilling;
    this.cvFuelGraph = cvFuelGraph;
    this.cvFuelRodDisconnections = cvFuelRodDisconnections;
    this.cvFuelTheft = cvFuelTheft;
    this.llOne = llOne;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFuelReportBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFuelReportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_fuel_report, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFuelReportBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cvFuelFilling;
      CardView cvFuelFilling = ViewBindings.findChildViewById(rootView, id);
      if (cvFuelFilling == null) {
        break missingId;
      }

      id = R.id.cvFuelGraph;
      CardView cvFuelGraph = ViewBindings.findChildViewById(rootView, id);
      if (cvFuelGraph == null) {
        break missingId;
      }

      id = R.id.cvFuelRodDisconnections;
      CardView cvFuelRodDisconnections = ViewBindings.findChildViewById(rootView, id);
      if (cvFuelRodDisconnections == null) {
        break missingId;
      }

      id = R.id.cvFuelTheft;
      CardView cvFuelTheft = ViewBindings.findChildViewById(rootView, id);
      if (cvFuelTheft == null) {
        break missingId;
      }

      id = R.id.llOne;
      LinearLayout llOne = ViewBindings.findChildViewById(rootView, id);
      if (llOne == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarLayoutBinding binding_toolbar = ToolbarLayoutBinding.bind(toolbar);

      return new ActivityFuelReportBinding((ConstraintLayout) rootView, cvFuelFilling, cvFuelGraph,
          cvFuelRodDisconnections, cvFuelTheft, llOne, binding_toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
